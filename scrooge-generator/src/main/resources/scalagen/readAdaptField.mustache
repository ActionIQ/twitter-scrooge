{{#isEnum}}
if (_fieldType == TType.I32 || _fieldType == TType.ENUM) {
{{/isEnum}}
{{^isEnum}}
if (_fieldType == TType.{{constType}}) {
{{/isEnum}}
  AdaptTProtocol.usedStartMarker({{id}})
  {{fieldName}} = {{#optional}}_root_.scala.Some({{/optional}}{{readFieldValueOrMethod}}{{#optional}}){{/optional}}
  AdaptTProtocol.usedEndMarker({{id}})
  AdaptTProtocol.unusedStartMarker({{id}})
{{#readWriteInfo}}
  {{>skipValue}}
{{/readWriteInfo}}
  AdaptTProtocol.unusedEndMarker({{id}})
{{#required}}
  {{gotName}} = true
{{/required}}
} else {
  throw AdaptTProtocol.unexpectedTypeException(
    TType.{{#isEnum}}ENUM{{/isEnum}}{{^isEnum}}{{constType}}{{/isEnum}},
    _fieldType,
    "{{fieldName}}"
  )
}
AdaptTProtocol.usedStartMarker({{id}})
adapt.{{setName}}({{fieldName}})
AdaptTProtocol.usedEndMarker({{id}})
