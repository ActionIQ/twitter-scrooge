/**
 * Generated by Scrooge
 *   version: ?
 *   rev: ?
 *   built at: ?
 */
#import "TFNTwitterThriftGoldResponse.h"

@import ApacheThrift;

@implementation TFNTwitterThriftGoldResponse

- (NSString*)description
{
    NSMutableString* ms = [NSMutableString stringWithString:@"TFNTwitterThriftGoldResponse( "];
    [ms appendString:@"statusCode:"];
    [ms appendFormat:@"%@ ", @(_statusCode)];
    [ms appendString:@"responseUnion:"];
    [ms appendFormat:@"%@ ", _responseUnion];
    [ms appendString:@")"];
    return [NSString stringWithString:ms];
}

- (instancetype)initWithStatusCode:(int32_t)statusCode responseUnion:(TFNTwitterThriftGoldResponseUnion*)responseUnion
{
    if (self = [super init]) {
        [self setStatusCode:statusCode];
        [self setResponseUnion:responseUnion];
    }

    return self;
}

+ (instancetype)instanceWithStatusCode:(int32_t)statusCode responseUnion:(TFNTwitterThriftGoldResponseUnion*)responseUnion error:(NSError **)error
{
    TFNTwitterThriftGoldResponse *instance = [[TFNTwitterThriftGoldResponse alloc] initWithStatusCode:statusCode responseUnion:responseUnion];
    if (error) {
        NSArray *invalidFields = [instance validateNonOptionalFields];
        if (invalidFields.count > 0) {
            NSString *errorDescription = [NSString stringWithFormat:@"Required fields not set: %@", invalidFields];
            *error = [NSError errorWithDomain:@"com.twitter.scrooge.backend.CocoaGenerator" code:0 userInfo:@{NSLocalizedDescriptionKey: errorDescription}];
        }
    }
    return instance;
}

- (instancetype)initWithCoder:(NSCoder*)decoder
{
    if (self = [super init]) {
        if ([decoder containsValueForKey:@"1"]) {
            [self setStatusCode:(int32_t)[decoder decodeInt32ForKey:@"1"]];
        }
        if ([decoder containsValueForKey:@"2"]) {
            [self setResponseUnion:(TFNTwitterThriftGoldResponseUnion*)[decoder decodeObjectForKey:@"2"]];
        }
    }
    return self;
}

- (void)encodeWithCoder:(NSCoder*)encoder
{
    if (_statusCodeIsSet) {
        [encoder encodeInt32:_statusCode forKey:@"1"];
    }
    if (_responseUnionIsSet) {
        [encoder encodeObject:_responseUnion forKey:@"2"];
    }
}

- (void)setStatusCode:(int32_t)statusCode
{
    _statusCode = statusCode;
    _statusCodeIsSet = YES;
}

- (void)setResponseUnion:(TFNTwitterThriftGoldResponseUnion *)responseUnion
{
    _responseUnion = responseUnion;
    _responseUnionIsSet = responseUnion != nil;
}

- (void)read:(id <TProtocol>)inProtocol
{
    NSString* fieldName;
    int fieldType;
    int fieldID;

    [inProtocol readStructBeginReturningName:nil];
    while (true) {
        [inProtocol readFieldBeginReturningName:&fieldName type:&fieldType fieldID:&fieldID];
        if (fieldType == TType_STOP) {
            break;
        }
        switch (fieldID) {
            case 1:
                if (fieldType == TType_I32) {
                    int32_t statusCode_item;
                    statusCode_item = [inProtocol readI32];
                    [self setStatusCode:statusCode_item];
                } else {
                    NSLog(@"%s: field ID %i has unexpected type %i.  Skipping.", __PRETTY_FUNCTION__, fieldID, fieldType);
                    [TProtocolUtil skipType:fieldType onProtocol:inProtocol];
                }
                break;
            case 2:
                if (fieldType == TType_STRUCT) {
                    TFNTwitterThriftGoldResponseUnion* responseUnion_item;
                    responseUnion_item = [[TFNTwitterThriftGoldResponseUnion alloc] init];
                    [responseUnion_item read:inProtocol];
                    [self setResponseUnion:responseUnion_item];
                } else {
                    NSLog(@"%s: field ID %i has unexpected type %i.  Skipping.", __PRETTY_FUNCTION__, fieldID, fieldType);
                    [TProtocolUtil skipType:fieldType onProtocol:inProtocol];
                }
                break;
        default:
            NSLog(@"%s: unexpected field ID %i with type %i.  Skipping.", __PRETTY_FUNCTION__, fieldID, fieldType);
            [TProtocolUtil skipType:fieldType onProtocol:inProtocol];
            break;
        }
        [inProtocol readFieldEnd];
    }
    [inProtocol readStructEnd];
    [self validate];
}

- (void)write:(id <TProtocol>)outProtocol
{
    [self validate];
    [outProtocol writeStructBeginWithName:@"TFNTwitterThriftGoldResponse"];
    if (_statusCodeIsSet) {
        [outProtocol writeFieldBeginWithName:@"statusCode" type:TType_I32 fieldID:1];
        int32_t statusCode_item = _statusCode;
        [outProtocol writeI32:statusCode_item];
        [outProtocol writeFieldEnd];
    }
    if (_responseUnionIsSet) {
        [outProtocol writeFieldBeginWithName:@"responseUnion" type:TType_STRUCT fieldID:2];
        TFNTwitterThriftGoldResponseUnion* responseUnion_item = _responseUnion;
        [responseUnion_item write: outProtocol];
        [outProtocol writeFieldEnd];
    }
    [outProtocol writeFieldStop];
    [outProtocol writeStructEnd];
}

- (void)validate
{
}

- (NSArray *)validateNonOptionalFields
{
    NSMutableArray *invalidFields = [NSMutableArray array];
    if (!_statusCodeIsSet) {
        [invalidFields addObject:@"statusCode"];
    }
    if (!_responseUnionIsSet) {
        [invalidFields addObject:@"responseUnion"];
    }
    return [invalidFields copy];
}

@end
