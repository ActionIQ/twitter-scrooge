/**
 * Generated by Scrooge
 *   version: ?
 *   rev: ?
 *   built at: ?
 *   source file: scrooge/scrooge-generator-tests/src/test/resources/gold_file_input/gold.thrift
 */
#import "TFNTwitterThriftGoldRequestException.h"

@import ApacheThrift;

@implementation TFNTwitterThriftGoldRequestException

- (NSString*)description
{
    NSMutableString* ms = [NSMutableString stringWithString:@"TFNTwitterThriftGoldRequestException( "];
    [ms appendString:@"message:"];
    [ms appendFormat:@"%@ ", _message];
    [ms appendString:@")"];
    return [NSString stringWithString:ms];
}

- (instancetype)initWithMessage:(NSString *)message
{
    if (self = [super init]) {
        [self setMessage:message];
    }

    return self;
}

+ (instancetype)instanceWithMessage:(NSString *)message error:(NSError **)error
{
    TFNTwitterThriftGoldRequestException *instance = [[TFNTwitterThriftGoldRequestException alloc] initWithMessage:message];
    if (error) {
        NSArray *invalidFields = [instance validateNonOptionalFields];
        if (invalidFields.count > 0) {
            NSString *errorDescription = [NSString stringWithFormat:@"Required fields not set: %@", invalidFields];
            *error = [NSError errorWithDomain:@"com.twitter.scrooge.backend.CocoaGenerator" code:0 userInfo:@{NSLocalizedDescriptionKey: errorDescription}];
        }
    }
    return instance;
}

- (instancetype)initWithCoder:(NSCoder*)decoder
{
    if (self = [super init]) {
        if ([decoder containsValueForKey:@"1"]) {
            [self setMessage:(NSString *)[decoder decodeObjectForKey:@"1"]];
        }
    }
    return self;
}

- (void)encodeWithCoder:(NSCoder*)encoder
{
    if (_messageIsSet) {
        [encoder encodeObject:_message forKey:@"1"];
    }
}

- (void)setMessage:(NSString *)message
{
    _message = [message copy];
    _messageIsSet = message != nil;
}

- (void)read:(id <TProtocol>)inProtocol
{
    NSString* fieldName;
    int fieldType;
    int fieldID;

    [inProtocol readStructBeginReturningName:nil];
    while (true) {
        [inProtocol readFieldBeginReturningName:&fieldName type:&fieldType fieldID:&fieldID];
        if (fieldType == TType_STOP) {
            break;
        }
        switch (fieldID) {
            case 1:
                if (fieldType == TType_STRING) {
                    NSString * message_item;
                    message_item = [inProtocol readString];
                    [self setMessage:message_item];
                } else {
                    NSLog(@"%s: field ID %i has unexpected type %i.  Skipping.", __PRETTY_FUNCTION__, fieldID, fieldType);
                    [TProtocolUtil skipType:fieldType onProtocol:inProtocol];
                }
                break;
        default:
            NSLog(@"%s: unexpected field ID %i with type %i.  Skipping.", __PRETTY_FUNCTION__, fieldID, fieldType);
            [TProtocolUtil skipType:fieldType onProtocol:inProtocol];
            break;
        }
        [inProtocol readFieldEnd];
    }
    [inProtocol readStructEnd];
    [self validate];
}

- (void)write:(id <TProtocol>)outProtocol
{
    [self validate];
    [outProtocol writeStructBeginWithName:@"TFNTwitterThriftGoldRequestException"];
    if (_messageIsSet) {
        [outProtocol writeFieldBeginWithName:@"message" type:TType_STRING fieldID:1];
        NSString * message_item = _message;
        [outProtocol writeString:message_item];
        [outProtocol writeFieldEnd];
    }
    [outProtocol writeFieldStop];
    [outProtocol writeStructEnd];
}

- (void)validate
{
}

- (NSArray *)validateNonOptionalFields
{
    NSMutableArray *invalidFields = [NSMutableArray array];
    if (!_messageIsSet) {
        [invalidFields addObject:@"message"];
    }
    return [invalidFields copy];
}

@end
