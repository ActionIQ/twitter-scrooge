/**
 * Generated by Scrooge
 *   version: ?
 *   rev: ?
 *   built at: ?
 */
package com.twitter.scrooge.test.gold.thriftscala

import com.twitter.finagle.{
  Filter => _,
  Service => _,
  thrift => _,
  _
}
import com.twitter.finagle.stats.{NullStatsReceiver, StatsReceiver}
import com.twitter.finagle.thrift.RichServerParam
import com.twitter.util.Future
import org.apache.thrift.protocol._

trait ServerValidationMixin {

  def violationReturningMoreCoolThings(
    request: com.twitter.scrooge.test.gold.thriftscala.Request,
    requestViolations: Set[com.twitter.scrooge.thrift_validation.ThriftValidationViolation]
  ): Future[Int] = {
    throw new com.twitter.scrooge.thrift_validation.ThriftValidationException("moreCoolThings", request.getClass, requestViolations)
  }
}

@javax.annotation.Generated(value = Array("com.twitter.scrooge.Compiler"))
class PlatinumService$FinagleService(
  iface: PlatinumService.MethodPerEndpoint with ServerValidationMixin,
  serverParam: RichServerParam
) extends GoldService$FinagleService(iface, serverParam) {
  import PlatinumService._

  @deprecated("Use com.twitter.finagle.thrift.RichServerParam", "2017-08-16")
  def this(
    iface: PlatinumService.MethodPerEndpoint with ServerValidationMixin,
    protocolFactory: TProtocolFactory,
    stats: StatsReceiver = NullStatsReceiver,
    maxThriftBufferSize: Int = Thrift.param.maxThriftBufferSize,
    serviceName: String = "PlatinumService"
  ) = this(iface, RichServerParam(protocolFactory, serviceName, maxThriftBufferSize, stats))

  @deprecated("Use com.twitter.finagle.thrift.RichServerParam", "2017-08-16")
  def this(
    iface: PlatinumService.MethodPerEndpoint with ServerValidationMixin,
    protocolFactory: TProtocolFactory,
    stats: StatsReceiver,
    maxThriftBufferSize: Int
  ) = this(iface, protocolFactory, stats, maxThriftBufferSize, "PlatinumService")

  @deprecated("Use com.twitter.finagle.thrift.RichServerParam", "2017-08-16")
  def this(
    iface: PlatinumService.MethodPerEndpoint with ServerValidationMixin,
    protocolFactory: TProtocolFactory
  ) = this(iface, protocolFactory, NullStatsReceiver, Thrift.param.maxThriftBufferSize)

  override def serviceName: String = serverParam.serviceName
  private[this] val filters: Filter = new Filter(serverParam)

  // ---- end boilerplate.

  addService("moreCoolThings", {
    val methodService = new _root_.com.twitter.finagle.Service[MoreCoolThings.Args, MoreCoolThings.SuccessType] {
      def apply(args: MoreCoolThings.Args): Future[MoreCoolThings.SuccessType] = {
        _root_.com.twitter.finagle.thrift.ServerAnnotations.annotate("moreCoolThings", "com.twitter.scrooge.test.gold.thriftscala.PlatinumService#moreCoolThings()")
        val requestViolations: Set[com.twitter.scrooge.thrift_validation.ThriftValidationViolation] =
          if (args.request != null) com.twitter.scrooge.test.gold.thriftscala.Request.validateInstanceValue(args.request)
          else Set.empty
        if (requestViolations.isEmpty) {
          iface.moreCoolThings(args.request)
        } else {
          iface.violationReturningMoreCoolThings(args.request, requestViolations)
        }
      }
    }
  
    filters.moreCoolThings.andThen(methodService)
  })
}